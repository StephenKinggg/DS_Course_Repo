<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1112.1434                               -->
<workbook original-version='18.1' source-build='2021.3.4 (20213.21.1112.1434)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Cumulative or New' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;New&quot;'>
        <calculation class='tableau' formula='&quot;New&quot;' />
        <members>
          <member value='&quot;New&quot;' />
          <member value='&quot;Cumulative&quot;' />
        </members>
      </column>
      <column caption='Positive Cases or Deaths' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Positive Cases&quot;'>
        <calculation class='tableau' formula='&quot;Positive Cases&quot;' />
        <members>
          <member value='&quot;Positive Cases&quot;' />
          <member value='&quot;Deaths&quot;' />
        </members>
      </column>
      <column caption='Select Metric' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;New Confirmed&quot;'>
        <calculation class='tableau' formula='&quot;New Confirmed&quot;' />
        <members>
          <member value='&quot;Total Confirmed as \% of Population&quot;' />
          <member value='&quot;Total Confirmed&quot;' />
          <member value='&quot;Total Deaths&quot;' />
          <member value='&quot;New Confirmed&quot;' />
          <member value='&quot;New Deaths&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='covid-19-case-counts-QueryResult' inline='true' name='federated.11iyuvs1rh34181e0c96b07nvwwb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid-19-case-counts-QueryResult' name='textscan.09v3czf1mezkvo15zbka206gl6du'>
            <connection class='textscan' directory='C:/Users/HP/DATA_SCIENCE_COURSE_NOTES/1. Projects_Assignment/17. TABL_Project_2(Covid-19 Dashboard)' filename='covid-19-case-counts-QueryResult.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.09v3czf1mezkvo15zbka206gl6du' name='covid-19-case-counts-QueryResult.csv' table='[covid-19-case-counts-QueryResult#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='people_positive_cases_count' ordinal='0' />
            <column datatype='string' name='county_name' ordinal='1' />
            <column datatype='string' name='province_state_name' ordinal='2' />
            <column datatype='date' name='report_date' ordinal='3' />
            <column datatype='string' name='continent_name' ordinal='4' />
            <column datatype='string' name='data_source_name' ordinal='5' />
            <column datatype='integer' name='people_death_new_count' ordinal='6' />
            <column datatype='integer' name='county_fips_number' ordinal='7' />
            <column datatype='string' name='country_alpha_3_code' ordinal='8' />
            <column datatype='string' name='country_short_name' ordinal='9' />
            <column datatype='string' name='country_alpha_2_code' ordinal='10' />
            <column datatype='integer' name='people_positive_new_cases_count' ordinal='11' />
            <column datatype='integer' name='people_death_count' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.09v3czf1mezkvo15zbka206gl6du' name='covid-19-case-counts-QueryResult.csv' table='[covid-19-case-counts-QueryResult#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='people_positive_cases_count' ordinal='0' />
            <column datatype='string' name='county_name' ordinal='1' />
            <column datatype='string' name='province_state_name' ordinal='2' />
            <column datatype='date' name='report_date' ordinal='3' />
            <column datatype='string' name='continent_name' ordinal='4' />
            <column datatype='string' name='data_source_name' ordinal='5' />
            <column datatype='integer' name='people_death_new_count' ordinal='6' />
            <column datatype='integer' name='county_fips_number' ordinal='7' />
            <column datatype='string' name='country_alpha_3_code' ordinal='8' />
            <column datatype='string' name='country_short_name' ordinal='9' />
            <column datatype='string' name='country_alpha_2_code' ordinal='10' />
            <column datatype='integer' name='people_positive_new_cases_count' ordinal='11' />
            <column datatype='integer' name='people_death_count' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_positive_cases_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_positive_cases_count]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>people_positive_cases_count</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province_state_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[province_state_name]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>province_state_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>report_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[report_date]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>report_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent_name]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>continent_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_source_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[data_source_name]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>data_source_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_death_new_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_death_new_count]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>people_death_new_count</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_fips_number]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>county_fips_number</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_alpha_3_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_alpha_3_code]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>country_alpha_3_code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_short_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_short_name]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>country_short_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_alpha_2_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_alpha_2_code]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>country_alpha_2_code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_positive_new_cases_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_positive_new_cases_count]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>people_positive_new_cases_count</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_death_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_death_count]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>people_death_count</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total or New Positive Cases' datatype='integer' name='[Calculation_756323309212364801]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;New&quot; THEN [people_positive_new_cases_count] &#13;&#10;ELSE [people_positive_cases_count] END' />
      </column>
      <column caption='Total or New Deaths' datatype='integer' name='[Calculation_756323309212901378]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;New&quot; THEN [people_death_new_count] &#13;&#10;ELSE [people_death_count] END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='covid-19-case-counts-QueryResult.csv' datatype='table' name='[__tableau_internal_object_id__].[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]' role='measure' type='quantitative' />
      <column caption='Continent Name' datatype='string' name='[continent_name]' role='dimension' type='nominal' />
      <column caption='Country Alpha 2 Code' datatype='string' name='[country_alpha_2_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Alpha 3 Code' datatype='string' name='[country_alpha_3_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='County Fips Number' datatype='integer' name='[county_fips_number]' role='dimension' type='ordinal' />
      <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Data Source Name' datatype='string' name='[data_source_name]' role='dimension' type='nominal' />
      <column caption='People Death Count' datatype='integer' name='[people_death_count]' role='measure' type='quantitative' />
      <column caption='People Death New Count' datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
      <column caption='People Positive Cases Count' datatype='integer' name='[people_positive_cases_count]' role='measure' type='quantitative' />
      <column caption='People Positive New Cases Count' datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
      <column caption='Province State Name' datatype='string' name='[province_state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Report Date' datatype='date' name='[report_date]' role='dimension' type='ordinal' />
      <column-instance column='[people_death_new_count]' derivation='Sum' name='[sum:people_death_new_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_positive_new_cases_count]' derivation='Sum' name='[sum:people_positive_new_cases_count:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:people_death_new_count:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.11iyuvs1rh34181e0c96b07nvwwb]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:people_positive_new_cases_count:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Cumulative or New' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;New&quot;'>
          <calculation class='tableau' formula='&quot;New&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid-19-case-counts-QueryResult.csv' id='covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E'>
            <properties context=''>
              <relation connection='textscan.09v3czf1mezkvo15zbka206gl6du' name='covid-19-case-counts-QueryResult.csv' table='[covid-19-case-counts-QueryResult#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='people_positive_cases_count' ordinal='0' />
                  <column datatype='string' name='county_name' ordinal='1' />
                  <column datatype='string' name='province_state_name' ordinal='2' />
                  <column datatype='date' name='report_date' ordinal='3' />
                  <column datatype='string' name='continent_name' ordinal='4' />
                  <column datatype='string' name='data_source_name' ordinal='5' />
                  <column datatype='integer' name='people_death_new_count' ordinal='6' />
                  <column datatype='integer' name='county_fips_number' ordinal='7' />
                  <column datatype='string' name='country_alpha_3_code' ordinal='8' />
                  <column datatype='string' name='country_short_name' ordinal='9' />
                  <column datatype='string' name='country_alpha_2_code' ordinal='10' />
                  <column datatype='integer' name='people_positive_new_cases_count' ordinal='11' />
                  <column datatype='integer' name='people_death_count' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-case-counts-QueryResult' name='federated.11iyuvs1rh34181e0c96b07nvwwb' />
          </datasources>
          <datasource-dependencies datasource='federated.11iyuvs1rh34181e0c96b07nvwwb'>
            <column caption='Country Alpha 2 Code' datatype='string' name='[country_alpha_2_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Alpha 3 Code' datatype='string' name='[country_alpha_3_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_alpha_2_code]' derivation='None' name='[none:country_alpha_2_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_alpha_3_code]' derivation='None' name='[none:country_alpha_3_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_short_name:nk]' value='276' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_short_name:nk] / ([federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_alpha_2_code:nk] / [federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_alpha_3_code:nk]))</rows>
        <cols />
      </table>
      <simple-id uuid='{59F4240E-61AF-4022-9449-96D7F654DE36}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-case-counts-QueryResult' name='federated.11iyuvs1rh34181e0c96b07nvwwb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11iyuvs1rh34181e0c96b07nvwwb'>
            <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
            <column caption='People Death New Count' datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
            <column-instance column='[people_death_new_count]' derivation='Sum' name='[sum:people_death_new_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_positive_new_cases_count]' derivation='Sum' name='[sum:people_positive_new_cases_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:people_death_new_count:qk]' />
              <size column='[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:people_positive_new_cases_count:qk]' />
              <lod column='[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_short_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11iyuvs1rh34181e0c96b07nvwwb].[Latitude (generated)]</rows>
        <cols>[federated.11iyuvs1rh34181e0c96b07nvwwb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{50709DB5-180C-4EA9-9913-966F0B7EB8C0}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-case-counts-QueryResult' name='federated.11iyuvs1rh34181e0c96b07nvwwb' />
          </datasources>
          <datasource-dependencies datasource='federated.11iyuvs1rh34181e0c96b07nvwwb'>
            <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_short_name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{98AA47F7-0CBC-4C42-A628-B714A5779DE0}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_alpha_2_code:nk]</field>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_alpha_3_code:nk]</field>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_short_name:nk]</field>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:county_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9966AC00-BBAD-4A84-8983-4E109FDC543E}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:people_death_new_count:qk]' type='color' />
            <card pane-specification-id='4' param='[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:people_positive_new_cases_count:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_short_name:nk]</field>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:county_name:nk]</field>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:people_death_new_count:qk]</field>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[yr:report_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E81E961-F317-4D05-8E62-AC4C017F8C39}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_short_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1FEE07F1-91EC-49E1-8714-672E952971A9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      BJ6CmSVhrAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
