<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1112.1434                               -->
<workbook original-version='18.1' source-build='2021.3.4 (20213.21.1112.1434)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Cumulative or New' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;New&quot;'>
        <calculation class='tableau' formula='&quot;New&quot;' />
        <members>
          <member value='&quot;New&quot;' />
          <member value='&quot;Cumulative&quot;' />
        </members>
      </column>
      <column caption='Positive Cases or Deaths' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Positive Cases&quot;'>
        <calculation class='tableau' formula='&quot;Positive Cases&quot;' />
        <members>
          <member value='&quot;Positive Cases&quot;' />
          <member value='&quot;Deaths&quot;' />
        </members>
      </column>
      <column caption='Select Metric' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;New Confirmed&quot;'>
        <calculation class='tableau' formula='&quot;New Confirmed&quot;' />
        <members>
          <member value='&quot;Total Confirmed as \% of Population&quot;' />
          <member value='&quot;Total Confirmed&quot;' />
          <member value='&quot;Total Deaths&quot;' />
          <member value='&quot;New Confirmed&quot;' />
          <member value='&quot;New Deaths&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='covid-19-case-counts-QueryResult' inline='true' name='federated.11iyuvs1rh34181e0c96b07nvwwb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid-19-case-counts-QueryResult' name='textscan.09v3czf1mezkvo15zbka206gl6du'>
            <connection class='textscan' directory='C:/Users/HP/DATA_SCIENCE_COURSE_NOTES/1. Projects_Assignment/17. TABL_Project_2(Covid-19 Dashboard)' filename='covid-19-case-counts-QueryResult.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.09v3czf1mezkvo15zbka206gl6du' name='covid-19-case-counts-QueryResult.csv' table='[covid-19-case-counts-QueryResult#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='people_positive_cases_count' ordinal='0' />
            <column datatype='string' name='county_name' ordinal='1' />
            <column datatype='string' name='province_state_name' ordinal='2' />
            <column datatype='date' name='report_date' ordinal='3' />
            <column datatype='string' name='continent_name' ordinal='4' />
            <column datatype='string' name='data_source_name' ordinal='5' />
            <column datatype='integer' name='people_death_new_count' ordinal='6' />
            <column datatype='integer' name='county_fips_number' ordinal='7' />
            <column datatype='string' name='country_alpha_3_code' ordinal='8' />
            <column datatype='string' name='country_short_name' ordinal='9' />
            <column datatype='string' name='country_alpha_2_code' ordinal='10' />
            <column datatype='integer' name='people_positive_new_cases_count' ordinal='11' />
            <column datatype='integer' name='people_death_count' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.09v3czf1mezkvo15zbka206gl6du' name='covid-19-case-counts-QueryResult.csv' table='[covid-19-case-counts-QueryResult#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='people_positive_cases_count' ordinal='0' />
            <column datatype='string' name='county_name' ordinal='1' />
            <column datatype='string' name='province_state_name' ordinal='2' />
            <column datatype='date' name='report_date' ordinal='3' />
            <column datatype='string' name='continent_name' ordinal='4' />
            <column datatype='string' name='data_source_name' ordinal='5' />
            <column datatype='integer' name='people_death_new_count' ordinal='6' />
            <column datatype='integer' name='county_fips_number' ordinal='7' />
            <column datatype='string' name='country_alpha_3_code' ordinal='8' />
            <column datatype='string' name='country_short_name' ordinal='9' />
            <column datatype='string' name='country_alpha_2_code' ordinal='10' />
            <column datatype='integer' name='people_positive_new_cases_count' ordinal='11' />
            <column datatype='integer' name='people_death_count' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_positive_cases_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_positive_cases_count]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>people_positive_cases_count</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province_state_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[province_state_name]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>province_state_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>report_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[report_date]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>report_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent_name]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>continent_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_source_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[data_source_name]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>data_source_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_death_new_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_death_new_count]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>people_death_new_count</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[county_fips_number]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>county_fips_number</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_alpha_3_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_alpha_3_code]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>country_alpha_3_code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_short_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_short_name]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>country_short_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_alpha_2_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_alpha_2_code]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>country_alpha_2_code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_positive_new_cases_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_positive_new_cases_count]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>people_positive_new_cases_count</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_death_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_death_count]</local-name>
            <parent-name>[covid-19-case-counts-QueryResult.csv]</parent-name>
            <remote-alias>people_death_count</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total or New Positive Cases' datatype='integer' name='[Calculation_756323309212364801]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;New&quot; THEN [people_positive_new_cases_count] &#13;&#10;ELSE [people_positive_cases_count] END' />
      </column>
      <column caption='Total or New Deaths' datatype='integer' name='[Calculation_756323309212901378]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;New&quot; THEN [people_death_new_count] &#13;&#10;ELSE [people_death_count] END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='covid-19-case-counts-QueryResult.csv' datatype='table' name='[__tableau_internal_object_id__].[covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E]' role='measure' type='quantitative' />
      <column caption='Continent Name' datatype='string' name='[continent_name]' role='dimension' type='nominal' />
      <column caption='Country Alpha 2 Code' datatype='string' name='[country_alpha_2_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Alpha 3 Code' datatype='string' name='[country_alpha_3_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='County Fips Number' datatype='integer' name='[county_fips_number]' role='dimension' type='ordinal' />
      <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Data Source Name' datatype='string' name='[data_source_name]' role='dimension' type='nominal' />
      <column caption='People Death Count' datatype='integer' name='[people_death_count]' role='measure' type='quantitative' />
      <column caption='People Death New Count' datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
      <column caption='People Positive Cases Count' datatype='integer' name='[people_positive_cases_count]' role='measure' type='quantitative' />
      <column caption='People Positive New Cases Count' datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
      <column caption='Province State Name' datatype='string' name='[province_state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Report Date' datatype='date' name='[report_date]' role='dimension' type='ordinal' />
      <column-instance column='[people_death_new_count]' derivation='Sum' name='[sum:people_death_new_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_positive_new_cases_count]' derivation='Sum' name='[sum:people_positive_new_cases_count:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:people_death_new_count:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.11iyuvs1rh34181e0c96b07nvwwb]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:people_positive_new_cases_count:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='alpha-per-table' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Cumulative or New' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;New&quot;'>
          <calculation class='tableau' formula='&quot;New&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid-19-case-counts-QueryResult.csv' id='covid-19-case-counts-QueryResult.csv_6E2E81E28D98418CA3551ECEBDFD760E'>
            <properties context=''>
              <relation connection='textscan.09v3czf1mezkvo15zbka206gl6du' name='covid-19-case-counts-QueryResult.csv' table='[covid-19-case-counts-QueryResult#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='people_positive_cases_count' ordinal='0' />
                  <column datatype='string' name='county_name' ordinal='1' />
                  <column datatype='string' name='province_state_name' ordinal='2' />
                  <column datatype='date' name='report_date' ordinal='3' />
                  <column datatype='string' name='continent_name' ordinal='4' />
                  <column datatype='string' name='data_source_name' ordinal='5' />
                  <column datatype='integer' name='people_death_new_count' ordinal='6' />
                  <column datatype='integer' name='county_fips_number' ordinal='7' />
                  <column datatype='string' name='country_alpha_3_code' ordinal='8' />
                  <column datatype='string' name='country_short_name' ordinal='9' />
                  <column datatype='string' name='country_alpha_2_code' ordinal='10' />
                  <column datatype='integer' name='people_positive_new_cases_count' ordinal='11' />
                  <column datatype='integer' name='people_death_count' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-case-counts-QueryResult' name='federated.11iyuvs1rh34181e0c96b07nvwwb' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Cumulative or New' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;New&quot;'>
              <calculation class='tableau' formula='&quot;New&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.11iyuvs1rh34181e0c96b07nvwwb'>
            <column caption='Total or New Positive Cases' datatype='integer' name='[Calculation_756323309212364801]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;New&quot; THEN [people_positive_new_cases_count] &#13;&#10;ELSE [people_positive_cases_count] END' />
            </column>
            <column-instance column='[report_date]' derivation='Attribute' name='[attr:report_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[report_date]' derivation='None' name='[none:report_date:qk]' pivot='key' type='quantitative' />
            <column caption='People Positive Cases Count' datatype='integer' name='[people_positive_cases_count]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
            <column caption='Report Date' datatype='date' name='[report_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_756323309212364801]' derivation='Sum' name='[sum:Calculation_756323309212364801:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.11iyuvs1rh34181e0c96b07nvwwb].[attr:report_date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:Calculation_756323309212364801:qk]</rows>
        <cols>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:report_date:qk]</cols>
      </table>
      <simple-id uuid='{59F4240E-61AF-4022-9449-96D7F654DE36}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-case-counts-QueryResult' name='federated.11iyuvs1rh34181e0c96b07nvwwb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11iyuvs1rh34181e0c96b07nvwwb'>
            <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
            <column caption='People Death New Count' datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
            <column-instance column='[people_death_new_count]' derivation='Sum' name='[sum:people_death_new_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_positive_new_cases_count]' derivation='Sum' name='[sum:people_positive_new_cases_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:people_death_new_count:qk]' />
              <size column='[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:people_positive_new_cases_count:qk]' />
              <lod column='[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_short_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11iyuvs1rh34181e0c96b07nvwwb].[Latitude (generated)]</rows>
        <cols>[federated.11iyuvs1rh34181e0c96b07nvwwb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{50709DB5-180C-4EA9-9913-966F0B7EB8C0}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-19-case-counts-QueryResult' name='federated.11iyuvs1rh34181e0c96b07nvwwb' />
          </datasources>
          <datasource-dependencies datasource='federated.11iyuvs1rh34181e0c96b07nvwwb'>
            <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country_short_name]' derivation='None' name='[none:country_short_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_short_name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{98AA47F7-0CBC-4C42-A628-B714A5779DE0}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_alpha_2_code:nk]</field>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_alpha_3_code:nk]</field>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_short_name:nk]</field>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:county_name:nk]</field>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[yr:report_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9966AC00-BBAD-4A84-8983-4E109FDC543E}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:people_death_new_count:qk]' type='color' />
            <card pane-specification-id='4' param='[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:people_positive_new_cases_count:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_short_name:nk]</field>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:county_name:nk]</field>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[sum:people_death_new_count:qk]</field>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[yr:report_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E81E961-F317-4D05-8E62-AC4C017F8C39}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11iyuvs1rh34181e0c96b07nvwwb].[none:country_short_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1FEE07F1-91EC-49E1-8714-672E952971A9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
