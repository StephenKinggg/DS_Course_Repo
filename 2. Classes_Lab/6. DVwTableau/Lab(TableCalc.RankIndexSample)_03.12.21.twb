<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1112.1434                               -->
<workbook original-version='18.1' source-build='2021.3.4 (20213.21.1112.1434)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='SalesTarget' inline='true' name='federated.0akp7uh19vz24n16yq3xx1c2h3gn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SalesTarget' name='excel-direct.0e6745v1hgeeqy1a6zqbi101eqcn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/HP/DATA_SCIENCE_COURSE_NOTES/2. Classes_Lab/6. DVwTableau/Tableau_Data/Blending/SalesTarget.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0e6745v1hgeeqy1a6zqbi101eqcn' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
          <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
            <column datatype='string' name='Order ID' ordinal='0' />
            <column datatype='date' name='Order Date' ordinal='1' />
            <column datatype='string' name='Customer Name' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Region' ordinal='5' />
            <column datatype='string' name='Segment' ordinal='6' />
            <column datatype='date' name='Ship Date' ordinal='7' />
            <column datatype='string' name='Ship Mode' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0e6745v1hgeeqy1a6zqbi101eqcn' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
            <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='date' name='Order Date' ordinal='1' />
              <column datatype='string' name='Customer Name' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Region' ordinal='5' />
              <column datatype='string' name='Segment' ordinal='6' />
              <column datatype='date' name='Ship Date' ordinal='7' />
              <column datatype='string' name='Ship Mode' ordinal='8' />
              <column datatype='string' name='State' ordinal='9' />
            </columns>
          </relation>
          <relation connection='excel-direct.0e6745v1hgeeqy1a6zqbi101eqcn' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
            <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='string' name='Product Name' ordinal='1' />
              <column datatype='real' name='Discount' ordinal='2' />
              <column datatype='integer' name='Sales' ordinal='3' />
              <column datatype='integer' name='Profit' ordinal='4' />
              <column datatype='integer' name='Quantity' ordinal='5' />
              <column datatype='string' name='Category' ordinal='6' />
              <column datatype='string' name='Sub-Category' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[OrderBreakdown].[Category]' />
          <map key='[City]' value='[ListOfOrders].[City]' />
          <map key='[Country]' value='[ListOfOrders].[Country]' />
          <map key='[Customer Name]' value='[ListOfOrders].[Customer Name]' />
          <map key='[Discount]' value='[OrderBreakdown].[Discount]' />
          <map key='[Order Date]' value='[ListOfOrders].[Order Date]' />
          <map key='[Order ID (OrderBreakdown)]' value='[OrderBreakdown].[Order ID]' />
          <map key='[Order ID]' value='[ListOfOrders].[Order ID]' />
          <map key='[Product Name]' value='[OrderBreakdown].[Product Name]' />
          <map key='[Profit]' value='[OrderBreakdown].[Profit]' />
          <map key='[Quantity]' value='[OrderBreakdown].[Quantity]' />
          <map key='[Region]' value='[ListOfOrders].[Region]' />
          <map key='[Sales]' value='[OrderBreakdown].[Sales]' />
          <map key='[Segment]' value='[ListOfOrders].[Segment]' />
          <map key='[Ship Date]' value='[ListOfOrders].[Ship Date]' />
          <map key='[Ship Mode]' value='[ListOfOrders].[Ship Mode]' />
          <map key='[State]' value='[ListOfOrders].[State]' />
          <map key='[Sub-Category]' value='[OrderBreakdown].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J4118:no:A1:J4118:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H8048:no:A1:H8048:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_12F7C37A7EC343EF82501BA598B9B2A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_12F7C37A7EC343EF82501BA598B9B2A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_12F7C37A7EC343EF82501BA598B9B2A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_12F7C37A7EC343EF82501BA598B9B2A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_12F7C37A7EC343EF82501BA598B9B2A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_12F7C37A7EC343EF82501BA598B9B2A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_12F7C37A7EC343EF82501BA598B9B2A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_12F7C37A7EC343EF82501BA598B9B2A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_12F7C37A7EC343EF82501BA598B9B2A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_12F7C37A7EC343EF82501BA598B9B2A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (OrderBreakdown)]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_0CDAC1D515594EDD90E2A0A1AE0D8981]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_0CDAC1D515594EDD90E2A0A1AE0D8981]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_0CDAC1D515594EDD90E2A0A1AE0D8981]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_0CDAC1D515594EDD90E2A0A1AE0D8981]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_0CDAC1D515594EDD90E2A0A1AE0D8981]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_0CDAC1D515594EDD90E2A0A1AE0D8981]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_0CDAC1D515594EDD90E2A0A1AE0D8981]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[OrderBreakdown_0CDAC1D515594EDD90E2A0A1AE0D8981]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank' datatype='integer' name='[Calculation_1217097845055127555]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='RANK(MAX([Ship Date]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_1217097845056610310]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='ListOfOrders' datatype='table' name='[__tableau_internal_object_id__].[ListOfOrders_12F7C37A7EC343EF82501BA598B9B2A7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='OrderBreakdown' datatype='table' name='[__tableau_internal_object_id__].[OrderBreakdown_0CDAC1D515594EDD90E2A0A1AE0D8981]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='Adress'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ListOfOrders' id='ListOfOrders_12F7C37A7EC343EF82501BA598B9B2A7'>
            <properties context=''>
              <relation connection='excel-direct.0e6745v1hgeeqy1a6zqbi101eqcn' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
                <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
                  <column datatype='string' name='Order ID' ordinal='0' />
                  <column datatype='date' name='Order Date' ordinal='1' />
                  <column datatype='string' name='Customer Name' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Region' ordinal='5' />
                  <column datatype='string' name='Segment' ordinal='6' />
                  <column datatype='date' name='Ship Date' ordinal='7' />
                  <column datatype='string' name='Ship Mode' ordinal='8' />
                  <column datatype='string' name='State' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='OrderBreakdown' id='OrderBreakdown_0CDAC1D515594EDD90E2A0A1AE0D8981'>
            <properties context=''>
              <relation connection='excel-direct.0e6745v1hgeeqy1a6zqbi101eqcn' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
                <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
                  <column datatype='string' name='Order ID' ordinal='0' />
                  <column datatype='string' name='Product Name' ordinal='1' />
                  <column datatype='real' name='Discount' ordinal='2' />
                  <column datatype='integer' name='Sales' ordinal='3' />
                  <column datatype='integer' name='Profit' ordinal='4' />
                  <column datatype='integer' name='Quantity' ordinal='5' />
                  <column datatype='string' name='Category' ordinal='6' />
                  <column datatype='string' name='Sub-Category' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (OrderBreakdown)]' />
            </expression>
            <first-end-point object-id='ListOfOrders_12F7C37A7EC343EF82501BA598B9B2A7' />
            <second-end-point object-id='OrderBreakdown_0CDAC1D515594EDD90E2A0A1AE0D8981' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='ByIndex'>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesTarget' name='federated.0akp7uh19vz24n16yq3xx1c2h3gn' />
          </datasources>
          <datasource-dependencies datasource='federated.0akp7uh19vz24n16yq3xx1c2h3gn'>
            <column caption='{ FIXED [Customer Name] :  SUM([Sales])}' datatype='integer' name='[Calculation_1217097845054652418]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='{ FIXED [Customer Name] :  SUM([Sales])}' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_1217097845056610310]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Ship Date]' derivation='Max' name='[max:Ship Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Date]' derivation='None' name='[none:Ship Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1217097845054652418]' derivation='Sum' name='[sum:Calculation_1217097845054652418:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1217097845056610310]' derivation='User' name='[usr:Calculation_1217097845056610310:ok:7]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Country:nk]' ordering-type='Field'>
                <order field='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Customer Name:nk]' />
                <order field='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Country:nk]' />
                <order field='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:State:nk]' />
                <order field='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:City:nk]' />
                <order field='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Ship Date:ok]' />
                <sort direction='DESC' using='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[max:Ship Date:ok]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[usr:Calculation_1217097845056610310:ok:7]'>
            <groupfilter function='member' level='[usr:Calculation_1217097845056610310:ok:7]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[usr:Calculation_1217097845056610310:ok:7]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[sum:Calculation_1217097845054652418:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Customer Name:nk] / ([federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Country:nk] / ([federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:State:nk] / ([federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:City:nk] / ([federated.0akp7uh19vz24n16yq3xx1c2h3gn].[usr:Calculation_1217097845056610310:ok:7] / [federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Ship Date:ok])))))</rows>
        <cols />
      </table>
      <simple-id uuid='{A71E966F-FBDB-43CC-9A0F-2D224D0E6E08}' />
    </worksheet>
    <worksheet name='ByRank'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontsize='14'>Sum of { FIXED [Customer Name] :  SUM([Sales])} broken down by Customer Name, Country, State, City, Rank and Ship Date. The view is filtered on Rank, which keeps 1.</run>
            <run>Æ&#10;</run>
            <run fontsize='14'>Önce müşterinin total de yaptığı harcamayı görmek için fixed func cullandık. Sonra Rank(bunda calc.da max ship date alırken) veya Index(calc.da sadece index() yazıyorum) tanımlayarak bunuda create calc.table dan ındex veya rank seçerek bu işlemi yapıyoruz. </run>
            <run>Æ&#10;</run>
            <run fontsize='14'>Önce oluşturduğumuz Rank rowsa atıp burada edit table calc. açılan pencereden custom yapıyorum.</run>
            <run>Æ&#10;</run>
            <run fontsize='14'>Index te ise önce customer sonra ise ship date göre bir sıralama yaptırıyorum.</run>
            <run>Æ&#10;</run>
            <run fontsize='14'>Son olarak ise rowstaki Rank tutarak filtere atıyorum ve istediğim sıralamayı yapmış oluyorum.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesTarget' name='federated.0akp7uh19vz24n16yq3xx1c2h3gn' />
          </datasources>
          <datasource-dependencies datasource='federated.0akp7uh19vz24n16yq3xx1c2h3gn'>
            <column caption='{ FIXED [Customer Name] :  SUM([Sales])}' datatype='integer' name='[Calculation_1217097845054652418]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='{ FIXED [Customer Name] :  SUM([Sales])}' />
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_1217097845055127555]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='RANK(MAX([Ship Date]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Date]' derivation='None' name='[none:Ship Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1217097845054652418]' derivation='Sum' name='[sum:Calculation_1217097845054652418:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1217097845055127555]' derivation='User' name='[usr:Calculation_1217097845055127555:ok:5]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Country:nk]' ordering-type='Field'>
                <order field='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Customer Name:nk]' />
                <order field='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Country:nk]' />
                <order field='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:State:nk]' />
                <order field='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:City:nk]' />
                <order field='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Ship Date:ok]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[usr:Calculation_1217097845055127555:ok:5]'>
            <groupfilter function='level-members' level='[usr:Calculation_1217097845055127555:ok:5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[usr:Calculation_1217097845055127555:ok:5]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[sum:Calculation_1217097845054652418:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Customer Name:nk] / ([federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Country:nk] / ([federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:State:nk] / ([federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:City:nk] / ([federated.0akp7uh19vz24n16yq3xx1c2h3gn].[usr:Calculation_1217097845055127555:ok:5] / [federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Ship Date:ok])))))</rows>
        <cols />
      </table>
      <simple-id uuid='{D8ACD308-FF21-4184-8EF4-1846AA576161}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='ByRank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[usr:Calculation_1217097845055127555:ok:5]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Country:nk]</field>
            <field>[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Customer Name:nk]</field>
            <field>[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Ship Date:ok]</field>
            <field>[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[usr:Calculation_1217097845055127555:ok:5]</field>
            <field>[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[usr:Calculation_1217097845055127555:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{960EAECC-5B36-4D0F-BD86-B0616758B794}' />
    </window>
    <window class='worksheet' name='ByIndex'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[usr:Calculation_1217097845056610310:ok:7]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Country:nk]</field>
            <field>[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Customer Name:nk]</field>
            <field>[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[none:Ship Date:ok]</field>
            <field>[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[usr:Calculation_1217097845055127555:ok]</field>
            <field>[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[usr:Calculation_1217097845056610310:ok:7]</field>
            <field>[federated.0akp7uh19vz24n16yq3xx1c2h3gn].[usr:Calculation_1217097845056610310:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A88319A8-241C-4AF4-99A3-E970F82B1E86}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ByIndex' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ByRank' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
